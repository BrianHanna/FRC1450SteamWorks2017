// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1450.FRCSteamworks;

import org.usfirst.frc1450.FRCSteamworks.commands.climberCommands.ClimbCommand;
import org.usfirst.frc1450.FRCSteamworks.commands.climberCommands.DisableClimber;
import org.usfirst.frc1450.FRCSteamworks.commands.driveCommands.ZeroDriveEncoders;
import org.usfirst.frc1450.FRCSteamworks.commands.driveCommands.climberDrivesCommand;
import org.usfirst.frc1450.FRCSteamworks.commands.driveCommands.gearDrivesCommand;
import org.usfirst.frc1450.FRCSteamworks.commands.gearRelease.closeGearRelease;
import org.usfirst.frc1450.FRCSteamworks.commands.gearRelease.openGearRelease;
import org.usfirst.frc1450.FRCSteamworks.commands.gearShiftCommands.HomeGearShift;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton gearDrivesButton;
    public JoystickButton climberDrivesButton;
    public JoystickButton zeroDrivesEncoderButton;
    public JoystickButton PIDDriveButton;
    public Joystick driveJoystick;
    public JoystickButton forwardClimbButton;
    public JoystickButton gearReleaseButton;
    public JoystickButton reverseClimbButton;
    public JoystickButton homeGearShiftButton;
    public Joystick copilotJoystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static int xBoxLeftX = 0;
	public static int xBoxLeftY = 1;
	public static int xBoxLeftTrigger = 2;
	public static int xBoxRightTrigger = 3;
	public static int xBoxRightX = 4;
	public static int xBoxRightY = 5;
	public static int xBoxAButton = 1;	//fixed
	public static int xBoxBButton = 2;	//
	public static int xBoxXButton = 3;	//fixed
	public static int xBoxYButton = 4;	//fixed
	public static int xBoxLeftButton = 5;
	public static int xBoxRightButton = 6;
	public static int xBoxBackButton = 7;
	public static int xBoxStartButton = 8;
	public static int xBoxLeftStickButton = 9;
	public static int xBoxRightStickButton = 10;
	
    public OI() {
    	//Drive Joystick - controls driving robot and switching webcam views
    	//Left Joystick - drives
    	//A Button - switches driving/camera perspective to hanging gears
    	//B Button - switches driving/camera perspective to climbing/feeder station
    	driveJoystick = new Joystick(0);     
    	gearDrivesButton = new JoystickButton(driveJoystick, xBoxAButton);
    	gearDrivesButton.whenPressed(new gearDrivesCommand());
    	climberDrivesButton = new JoystickButton(driveJoystick, xBoxBButton);
    	climberDrivesButton.whenPressed(new climberDrivesCommand());
    	zeroDrivesEncoderButton = new JoystickButton(driveJoystick, xBoxYButton);
    	zeroDrivesEncoderButton.whenPressed(new ZeroDriveEncoders());
    	//Copilot Joystick - controls gear shifter, gear release and climber
    	//Left Joystick(xAxis) - controls gear shift position
    	//Right Joystick(yAxis) - controls climber motor (up direction disabled due to pawl)
    	//A Button - controls climber motor
    	//B Button - press and hold to open gear release, release to re-close gear release
    	//X Button - reverse climber motor (disabled due to pawl resisting travel in this direction)
        copilotJoystick = new Joystick(1);
        forwardClimbButton = new JoystickButton(copilotJoystick, xBoxAButton);
        forwardClimbButton.whileHeld(new ClimbCommand());
        forwardClimbButton.whenReleased(new DisableClimber());
        gearReleaseButton = new JoystickButton(copilotJoystick, xBoxBButton);
        gearReleaseButton.whenPressed(new closeGearRelease());
        gearReleaseButton.whenReleased(new openGearRelease());
        //reverseClimbButton = new JoystickButton(copilotJoystick, xBoxXButton);
        //reverseClimbButton.whenPressed(new ReverseClimb());
        //reverseClimbButton.whenReleased(new DisableClimber());
        homeGearShiftButton = new JoystickButton(copilotJoystick, xBoxYButton);
        homeGearShiftButton.whenPressed(new HomeGearShift(4.0));
    }

    //getDriveJoystick - returns drive joystick for use in other classes
    public Joystick getdriveJoystick() {
        return driveJoystick;
    }
    
    //getDriveJoystickYAxis - returns value of yAxis of drive joystick for use in other classes
    public double getDriveJoystickYAxis(){
    	return driveJoystick.getRawAxis(xBoxLeftY);
    }
    
    //getDriveJoystickXAxis - returns value of xAxis of left drive joystick for use in other classes
    public double getDriveJoystickXAxis(){
    	return driveJoystick.getRawAxis(xBoxLeftX);
    }

    //getcopilotJoystick - returns copilot joystick for use in other classes
    public Joystick getcopilotJoystick() {
        return copilotJoystick;
    }
    
    //getCopilotJoystickXAxis - returns xAxis of left copilot joystick for use in other classes
    public double getCopilotJoystickXAxis(){
    	return copilotJoystick.getRawAxis(xBoxLeftX);
    }
    
    //getRightCopilotJoystick - returns yAxis of right copilot joystick for use in other classes
    public double getRightCopilotJoystick(){
    	return copilotJoystick.getRawAxis(xBoxRightY);
    }

}

